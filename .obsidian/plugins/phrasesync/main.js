/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var T=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var z=Object.prototype.hasOwnProperty;var A=(h,l)=>{for(var t in l)T(h,t,{get:l[t],enumerable:!0})},B=(h,l,t,n)=>{if(l&&typeof l=="object"||typeof l=="function")for(let e of M(l))!z.call(h,e)&&e!==t&&T(h,e,{get:()=>l[e],enumerable:!(n=C(l,e))||n.enumerable});return h};var L=h=>B(T({},"__esModule",{value:!0}),h);var q={};A(q,{default:()=>m});module.exports=L(q);var d=require("obsidian");function R(h,l){let t=h.toLowerCase().split(""),n=l.toLowerCase(),e=0;for(let i of t){let r=n.indexOf(i,e);if(r===-1)return!1;e=r+1}return!0}var m=class extends d.Plugin{constructor(){super(...arguments);this.index=new Map;this.isIndexing=!1;this.startupAttempts=0;this.maxStartupAttempts=2}async onload(){this.startupAttempts++;try{await this.initializePlugin(),this.initStatusBar(),this.initRibbonIcon(),this.index.size===0&&this.startupAttempts<this.maxStartupAttempts?setTimeout(()=>this.reloadSelf(),200):this.showStartupNotice(),this.addCommand({id:"reload-phrasesync",name:"Reload PhraseSync",callback:()=>this.reloadSelf()})}catch(t){console.error("PhraseSync startup failed:",t),this.startupAttempts<this.maxStartupAttempts&&setTimeout(()=>this.reloadSelf(),200)}}initStatusBar(){this.statusBarEl=this.addStatusBarItem(),this.updateStatusBar("active"),this.statusBarEl.onClickEvent(()=>this.reloadSelf())}updateStatusBar(t){if(!this.statusBarEl)return;let n=t==="active"?"check":"refresh-cw";this.statusBarEl.empty(),(0,d.setIcon)(this.statusBarEl.createSpan(),n),this.statusBarEl.setAttr("title",`PhraseSync: ${t}. Click to reload.`)}initRibbonIcon(){this.addRibbonIcon("refresh-cw","Reload PhraseSync",()=>{this.reloadSelf()})}async reloadSelf(){console.log("PhraseSync: Initializing the plugin successful"),this.updateStatusBar("reloading"),await this.app.plugins.disablePlugin(this.manifest.id),await this.app.plugins.enablePlugin(this.manifest.id)}showStartupNotice(){new d.Notice("\u2705 PhraseSync initialized and ready",3500)}async initializePlugin(){this.metadataCache=this.app.metadataCache,this.vault=this.app.vault,await this.buildFullIndex(),this.registerEvent(this.metadataCache.on("changed",t=>this.debouncedIndexUpdate(t))),this.registerEvent(this.vault.on("create",t=>{t instanceof d.TFile&&this.debouncedIndexUpdate(t)})),this.registerEvent(this.vault.on("delete",t=>{t instanceof d.TFile&&this.deleteFromIndex(t)})),this.registerEvent(this.vault.on("rename",(t,n)=>{t instanceof d.TFile&&this.renameInIndex(t,n)})),this.registerEditorSuggest(new v(this))}onunload(){}normalizeText(t){return t.normalize("NFD").replace(/[̀-ͯ]/g,"").toLowerCase().replace(/[^\p{L}\p{N}]/gu,"")}async deleteFromIndex(t){for(let[n,e]of this.index.entries()){let i=e.filter(r=>r.notePath!==t.path);i.length>0?this.index.set(n,i):this.index.delete(n)}}renameInIndex(t,n){for(let[e,i]of this.index.entries()){let r=i.map(s=>s.notePath===n?{...s,notePath:t.path,noteTitle:t.basename}:s);this.index.set(e,r)}}async buildFullIndex(){if(this.isIndexing)return;this.isIndexing=!0,this.index.clear();let t=this.vault.getMarkdownFiles();for(let n of t)await this.indexFile(n);this.isIndexing=!1}async indexFile(t){var r;if(t.extension!=="md")return;let n=t.basename,e=t.path;this.addToIndex(n,{type:"title",notePath:e,noteTitle:n,target:n,displayText:n});let i=this.metadataCache.getFileCache(t);(r=i==null?void 0:i.frontmatter)!=null&&r.tags&&(Array.isArray(i.frontmatter.tags)?i.frontmatter.tags:i.frontmatter.tags.split(",").map(o=>o.trim())).forEach(o=>{this.addToIndex(o,{type:"tag",notePath:e,noteTitle:n,target:o,displayText:`#${o}`})}),i!=null&&i.headings&&i.headings.forEach(s=>{this.addToIndex(s.heading,{type:"heading",notePath:e,noteTitle:n,target:s.heading,displayText:`${n} > ${s.heading}`})}),i!=null&&i.sections&&i.sections.forEach(s=>{s.id&&this.addToIndex(s.id,{type:"block",notePath:e,noteTitle:n,target:s.id,displayText:`${n} > #${s.id}`})})}addToIndex(t,n){let e=this.normalizeText(t),i=this.index.get(e)||[];i.some(r=>r.type===n.type&&r.notePath===n.notePath&&r.target===n.target)||i.push(n),this.index.set(e,i)}debouncedIndexUpdate(t){this.debounceTimeout&&clearTimeout(this.debounceTimeout),this.debounceTimeout=window.setTimeout(()=>{this.deleteFromIndex(t),this.indexFile(t)},300)}getSuggestions(t){let n=this.normalizeText(t);if(!n)return[];let e=[];for(let[o,g]of this.index.entries())o.startsWith(n)&&e.push(...g.map(u=>({...u,score:0})));let i=[];for(let[o,g]of this.index.entries())R(n,o)&&i.push(...g.map(u=>({...u,score:.5})));return[...e,...i].filter((o,g,u)=>g===u.findIndex(c=>c.type===o.type&&c.notePath===o.notePath&&c.target===o.target)).slice(0,100)}},v=class extends d.EditorSuggest{constructor(t){super(t.app);this.plugin=t}onTrigger(t,n){let e=n.getLine(t.line);if(!e)return null;let i=e.match(/\b\d{4}-\d{2}-\d{2}\b/);if(i){let[a]=i;return{start:{line:t.line,ch:e.indexOf(a)},end:{line:t.line,ch:e.indexOf(a)+a.length},query:a}}let r=/[.!?]/g,s=0,o=e.length;for(let a=t.ch-1;a>=0;a--)if(/[.!?]/.test(e[a])){s=a+1;break}for(let a=t.ch;a<e.length;a++)if(/[.!?]/.test(e[a])){o=a;break}for(;s<o&&/\s/.test(e[s]);)s++;for(;o>s&&/\s/.test(e[o-1]);)o--;let g=e.substring(s,o),u=s,c=[],$=/\b\w[\w\p{L}\p{N}'-]*\b/gu,p;for(;(p=$.exec(g))!==null;)c.push({word:p[0],start:p.index,end:p.index+p[0].length});let I=t.ch-u,x=c.findIndex(a=>I>=a.start&&I<=a.end);if(x===-1&&(x=c.findIndex(a=>I===a.end)),x===-1)return null;for(let a=c.length;a>=1;a--)for(let E=0;E<=c.length-a;E++){let b=E,w=b+a-1,k=c[b].start,P=c[w].end;if(x<b||x>w)continue;let F=g.substring(k,P);if(this.plugin.getSuggestions(F).length>0)return{start:{line:t.line,ch:u+k},end:{line:t.line,ch:u+P},query:F}}let f=t.ch;for(;f>0&&!/[\s\p{P}]/u.test(e.charAt(f-1));)f--;let y=t.ch;for(;y<e.length&&!/[\s\p{P}]/u.test(e.charAt(y));)y++;let S=e.substring(f,y);return S?{start:{line:t.line,ch:f},end:{line:t.line,ch:y},query:S}:null}async getSuggestions(t){return this.plugin.getSuggestions(t.query)}renderSuggestion(t,n){let e=n.createDiv({cls:"smart-autolinker-suggestion"}),i={title:"file-text",heading:"heading",block:"link",tag:"tag"},r=e.createDiv({cls:"smart-autolinker-icon"});(0,d.setIcon)(r,i[t.type]),e.createDiv({cls:"smart-autolinker-text"}).createEl("strong",{text:t.displayText}),e.createEl("small",{text:`${t.type==="tag"?"Tag":t.type} in ${t.noteTitle}`,cls:"smart-autolinker-subtext"})}selectSuggestion(t){if(!this.context)return;let{editor:n,start:e,end:i,query:r}=this.context,s="";switch(t.type){case"title":s=`[[${t.target}|${r}]]`;break;case"heading":s=`[[${t.noteTitle}#${t.target}|${r}]]`;break;case"block":s=`[[${t.noteTitle}#^${t.target}|${r}]]`;break;case"tag":s=`[[${t.target}|${r}]]`;break}n.replaceRange(s,e,i),this.close()}};

/* nosourcemap */